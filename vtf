#! python
import os
import sys

from tool.clog import CLog

log = CLog(name="vtf", log_name="vtf")


def arguments_parser(args):
    """
    Return only the path for now.
    """
    print("Script's file name: ", args[0])
    print("Number of arguments: ", len(args))
    counter = 0
    for arg in args:
        counter += 1
        if arg.find("/"):
            print("Found the path")
            return arg
        print_str = " Argument index[{0}] : {1}".format(counter, arg)
        print(print_str)
        # print("Argument index[%d] : %s" % (counter, arg))
    return ""

# Get the arguments passed in at the command line.
if len(sys.argv) > 1:
    path = arguments_parser(sys.argv[1:])  # pass just the args
    full_path = path + ".py"
    log.info("MESSAGE ..........")
    if os.path.exists(full_path):
        log.info("This is the path: {0}".format(path, ))
    else:
        #  TODO: raise/throw an exception here
        log.exception("Thrown exception: path does not exist:".
                      format(full_path,))
        raise OSError

    # Need replace to make path friendly for __import__()
    path = path.replace('/', '.')
    print("New Path:", path)
    # Import the passed in module - executes it.
    try:
        # See link for alternative:
        # https://docs.python.org/3/reference/import.html
        command_module = __import__("%s" % path)
    except ImportError:
        #  TODO: test this raise/throw an exception
        log.exception("Thrown exception: unable to __import__()")
        tb = sys.exc_info()[2]
        raise ImportError(...).with_traceback(tb)
else:
    log.error("vtf <path> --> You are missing the path argument")
